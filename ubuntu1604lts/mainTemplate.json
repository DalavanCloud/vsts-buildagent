{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "baseUrl":{
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/marcvaneijk/vsts-buildagent/master/ubuntu1604lts"
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "buildagent"
        },
        "sshPublicKey": {
            "type": "securestring"
        },
        "vstsAccountUrl": {
            "type": "string",
            "defaultValue": "https://<your-organization>.visualstudio.com"
        },
        "personalAccessToken" : {
            "type": "securestring"
        },
        "agentPoolName" : {
            "type": "string"
        }
    },
    "variables": {
        "prefix": "bld",
        "names": {
            "storageAccount" : "[concat(variables('prefix'),uniquestring(resourceGroup().id))]",
            "nsg": "[concat(variables('prefix'),'-nsg')]",
            "vNic": "[concat(variables('prefix'),'-vNic')]",
            "pubIp": "[concat(variables('prefix'),'-pubIp')]",
            "pubIpName": "[concat(variables('prefix'),'-',uniquestring(resourceGroup().id))]",
            "vNet": "[concat(variables('prefix'),'-vNet')]",
            "subNet": "[concat(variables('prefix'),'-subNet')]",
            "vm": "[concat(variables('prefix'),'-vm')]",
            "vmConfig": "[concat(variables('prefix'),'-vmconfig')]"
        },
        "virtualMachineSize": "Standard_D1_v2",
        "vnetId": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', variables('names').vNet)]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', variables('names').subNet)]"
    },
    "resources": [
        {
            "name": "[variables('names').storageAccount]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2015-06-15",
            "location": "[parameters('location')]",
            "properties": {
                "accountType": "Standard_LRS"
            }
        },
        {
            "name": "[variables('names').nsg]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2015-06-15",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": {
                            "priority": 300,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "22"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('names').vNic]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2015-06-15",
            "location": "[parameters('location')]",
            "tags": {},
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('names').pubIp)]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', concat(variables('prefix'),'-nsg'))]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('names').nsg)]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('names').vNet)]",
                "[concat('Microsoft.Network/publicIpAddresses/', variables('names').pubIp)]"
            ]
        },
        {
            "name": "[variables('names').vNet]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2015-06-15",
            "location": "[parameters('location')]",
            "tags": {},
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.10.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('names').subNet]",
                        "properties": {
                            "addressPrefix": "10.10.0.0/24"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('names').pubIp]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2015-06-15",
            "location": "[parameters('location')]",
            "tags": {},
            "properties": {
                "publicIpAllocationMethod": "dynamic"
            }
        },
        {
            "name": "[variables('names').vm]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2016-03-30",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('names').vNic)]"
            ],
            "properties": {
                "osProfile": {
                    "computerName": "[variables('names').vm]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('sshPublicKey')]"
                                }
                            ]
                        }
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[variables('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "16.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "vhd": {
                            "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('names').storageAccount), '2015-06-15').primaryEndpoints.blob, 'vhds/bld-osdisk.vhd')]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('names').vNic)]"
                        }
                    ]
                }
            }
        },
        {
            "name": "[concat(variables('names').vm,'/config')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "location": "[parameters('location')]",
            "apiVersion": "2015-06-15",
            "dependsOn": [
              "[concat('Microsoft.Compute/virtualMachines/', variables('names').vm)]"
            ],
            "properties": {
              "publisher": "Microsoft.Azure.Extensions",
              "type": "CustomScript",
              "typeHandlerVersion": "2.0",
              "autoUpgradeMinorVersion": true,
              "settings": {
                "timestamp":123456789
              },
              "protectedSettings": {
                 "commandToExecute": "[concat('/bin/bash setupagent.sh', ' \"', parameters('vstsAccountUrl'), '\" \"', parameters('personalAccessToken'), '\" \"', parameters('agentPoolName'), '\"')]",
                 "fileUris": ["[concat(parameters('baseUrl'),'/scripts/setupagent.sh')]"]  
              }
            }
          }
    ],
    "outputs": {}
}